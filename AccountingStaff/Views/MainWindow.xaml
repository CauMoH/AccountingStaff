<Window x:Class="AccountingStaff.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AccountingStaff"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:uiCommon="clr-namespace:UiCommon;assembly=UiCommon" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:viewModel="clr-namespace:AccountingStaff.ViewModels"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        xmlns:localized1="clr-namespace:AccountingStaff.Localization"       
        Height="500" Width="1000"
        MinHeight="300"
        MinWidth="600"
        Title="{x:Static localized1:strings.MainTitle}"
        d:DataContext="{d:DesignInstance viewModel:MainViewModel }"
        Icon="/Images/ico.ico"
        Loaded="Window_Loaded"
        Closing="Window_Closing">

    <DockPanel>

        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{x:Static localized1:strings.About}" Command="{Binding OpenAboutWindowCommand}"/>
        </Menu>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <DataGrid x:Name="DataGridEmployees"
                  Margin="2,1,10,2"
                  ItemsSource="{Binding Employees}"
                  AutoGenerateColumns="False"
                  CanUserDeleteRows="False"
                  UseLayoutRounding="False"
                  ScrollViewer.IsDeferredScrollingEnabled="False"
                  Grid.Column="0"
                  EnableRowVirtualization="True" 
                 EnableColumnVirtualization="True"
                 VirtualizingStackPanel.VirtualizationMode="Standard"
                 VirtualizingStackPanel.IsVirtualizing="True"
                  LoadingRow="OnLoadingRow">

                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                </DataGrid.Resources>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{x:Static localized1:strings.RemoveEmployee}" 
                              Command="{Binding RemoveEmployeeCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                                    Path=PlacementTarget.SelectedItems}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="Transparent"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected}" Value="True"/>
                                    <Condition Binding="{Binding IsExpired}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="MediumVioletRed"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected}" Value="False"/>
                                    <Condition Binding="{Binding IsExpired}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="PaleVioletRed"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected}" Value="True"/>
                                    <Condition Binding="{Binding IsExpired}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="LightBlue"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected}" Value="False"/>
                                    <Condition Binding="{Binding IsExpired}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="AliceBlue"/>
                            </MultiDataTrigger>

                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.RowHeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow},
                    Path=Header}"/>
                    </DataTemplate>
                </DataGrid.RowHeaderTemplate>
                <DataGrid.Columns>

                    <DataGridTextColumn Header="{x:Static localized1:strings.Protocol}" Binding="{Binding Path=Protocol, Mode=TwoWay}"/>
                    <DataGridTextColumn Header="{x:Static localized1:strings.Surname}" Binding="{Binding Path=Surname, Mode=TwoWay}"/>
                    <DataGridTextColumn Header="{x:Static localized1:strings.Name}" Binding="{Binding Path=Name, Mode=TwoWay}"/>
                    <DataGridTextColumn Header="{x:Static localized1:strings.Patronymic}" Binding="{Binding Path=Patronymic, Mode=TwoWay}"/>
                    <DataGridTemplateColumn Header="{x:Static localized1:strings.СompletingСourse}" SortMemberPath="СompletingСourse">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding СompletingСourse,StringFormat={}{0:dd/MM/yyyy}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding СompletingСourse}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="{x:Static localized1:strings.NextCourse}" SortMemberPath="NextCourse">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding NextCourse,StringFormat={}{0:dd/MM/yyyy}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding NextCourse}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="{x:Static localized1:strings.Meta}" Binding="{Binding Path=Meta, Mode=TwoWay}"/>
                </DataGrid.Columns>
            </DataGrid>

            <StackPanel Orientation="Vertical" Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">

                <Border BorderThickness="1" BorderBrush="Black">
                    <Grid Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="{x:Static localized1:strings.Protocol}"
                           Grid.Column="0" Grid.Row="0"/>

                        <TextBlock Text="{x:Static localized1:strings.Surname}"
                           Grid.Column="0" Grid.Row="1"/>

                        <TextBlock Text="{x:Static localized1:strings.Name}"
                           Grid.Column="0" Grid.Row="2"/>

                        <TextBlock Text="{x:Static localized1:strings.Patronymic}"
                           Grid.Column="0" Grid.Row="3"/>

                        <TextBlock Text="{x:Static localized1:strings.СompletingСourse}"
                           Grid.Column="0" Grid.Row="4"/>

                        <TextBlock Text="{x:Static localized1:strings.NextCourse}"
                           Grid.Column="0" Grid.Row="5"/>

                        <TextBlock Text="{x:Static localized1:strings.Meta}"
                           Grid.Column="0" Grid.Row="6"/>

                        <TextBox Grid.Column="1" Grid.Row="0"
                           Text="{Binding TempEmployee.Protocol}"
                         uiCommon:FocusAdvancement.AdvancesByEnterKey="True"/>

                        <TextBox Grid.Column="1" Grid.Row="1"
                           Text="{Binding TempEmployee.Surname}"
                             uiCommon:FocusAdvancement.AdvancesByEnterKey="True"/>

                        <TextBox Grid.Column="1" Grid.Row="2"
                           Text="{Binding TempEmployee.Name}"
                         uiCommon:FocusAdvancement.AdvancesByEnterKey="True"/>

                        <TextBox Grid.Column="1" Grid.Row="3"
                           Text="{Binding TempEmployee.Patronymic}"
                         uiCommon:FocusAdvancement.AdvancesByEnterKey="True"/>

                        <DatePicker Grid.Column="1" Grid.Row="4"
                            SelectedDate="{Binding TempEmployee.СompletingСourse,
                                            Mode=TwoWay,
                                            TargetNullValue={x:Static System:DateTime.Now}}"/>

                        <DatePicker Grid.Column="1" Grid.Row="5"
                            SelectedDate="{Binding TempEmployee.NextCourse,
                                            Mode=TwoWay,
                                            TargetNullValue={x:Static System:DateTime.Now}}"/>

                        <TextBox Grid.Column="1" Grid.Row="6"
                           Text="{Binding TempEmployee.Meta}"
                         uiCommon:FocusAdvancement.AdvancesByEnterKey="True"/>

                    </Grid>
                </Border>

                <Button Margin="10" Content="{x:Static localized1:strings.AddEmployee}"
                    Command="{Binding CreateNewEmployeeCommand}"/>

                <Border BorderThickness="1"
                    BorderBrush="Black"
                    Margin="10">

                    <StackPanel Orientation="Vertical" HorizontalAlignment="Right">
                        <TextBlock Margin="10">
                        <Run Text="{x:Static localized1:strings.Counter}"/>
                        <Run Text="{Binding Employees.Count, Mode=OneWay}" FontWeight="Bold"/>
                        </TextBlock>

                        <TextBlock VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="10">
                        <Run Text="{x:Static localized1:strings.OverdueCourses}"/>
                        <Run Text="{Binding OverdueCourses, Mode=OneWay}" FontWeight="Bold"/>
                        </TextBlock>

                    </StackPanel>

                </Border>
            </StackPanel>

        </Grid>

    </DockPanel>

</Window>
